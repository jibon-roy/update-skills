"use client"
/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/xYHqD5MkVkT
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/
import Link from "next/link"
import { Button } from "@/components/ui/button"
import TextLogo from "./logo/textLogo"
import { DropdownMenuTrigger, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuItem, DropdownMenuContent, DropdownMenu } from "@/components/ui/dropdown-menu"
import Image from "next/image"
import { signOut, useSession } from "next-auth/react"
import userIcon from '@/assets/userplaceholder.png'
import { useRouter, usePathname } from "next/navigation"
import Swal from "sweetalert2"

export function Navigation() {
  const { data } = useSession()
  const router = useRouter()
  const pathname = usePathname()

  const handleSignOut = async () => {
    await signOut({ redirect: false }).then(() => {
      Swal.fire({
        title: 'See you!',
        text: 'Log out successful.',
        icon: 'success',
        confirmButtonText: 'Okay',
        confirmButtonColor: 'hsl(var(--main-primary-violet))'
      });
      router.push("/");
    });
  }

  const isActive = (path: string) => pathname === path;

  return (
    <nav className="bg-white shadow-sm dark:bg-gray-950/90">
      <div className="w-full container mx-auto px-4">
        <div className="flex justify-between h-14 items-center">
          <TextLogo />
          <nav className="hidden md:flex gap-4">
            <Link href="/" className={`font-medium flex items-center text-sm transition-colors relative  ${isActive('/') ?
              ` before:content-[''] before:absolute before:-bottom-1 before:left-0 before:w-full before:h-1 before:bg-main-primary-violet before:duration-300 before:ease-in-out`
              :
              `before:content-[''] before:absolute before:-bottom-1 before:left-0 before:w-full before:h-1 before:bg-main-primary-violet before:scale-x-0 before:origin-left  before:transition-transform before:duration-300 before:ease-in-out`}`}>
              Home
            </Link>
            <Link href="/dashboard" className={`font-medium flex items-center text-sm transition-colors relative  ${isActive('/dashboard') ?
              ` before:content-[''] before:absolute before:-bottom-1 before:left-0 before:w-full before:h-1 before:bg-main-primary-violet before:duration-300 before:ease-in-out`
              :
              `before:content-[''] before:absolute before:-bottom-1 before:left-0 before:w-full before:h-1 before:bg-main-primary-violet hover:before:scale-x-100 before:scale-x-0 before:origin-left before:transition-transform before:duration-300 before:ease-in-out`}`}>
              Dashboard
            </Link>
            <Link href="/about" className={`font-medium flex items-center text-sm transition-colors hover:underline ${isActive('/about') ? 'font-bold underline' : ''}`}>
              About
            </Link>
            <Link href="/services" className={`font-medium flex items-center text-sm transition-colors hover:underline ${isActive('/services') ? 'font-bold underline' : ''}`}>
              Services
            </Link>
            <Link href="/contact" className={`font-medium flex items-center text-sm transition-colors hover:underline ${isActive('/contact') ? 'font-bold' : ''}`}>
              Contact
            </Link>
          </nav>
          <div className="flex items-center gap-4">
            {data ? (
              <DropdownMenu>
                <DropdownMenuTrigger asChild>
                  <Button
                    className="rounded-full border border-gray-200 w-8 h-8 dark:border-gray-800"
                    size="icon"
                    variant="ghost"
                  >
                    <Image
                      alt="Avatar"
                      className="rounded-full"
                      height="32"
                      src={data?.user?.image ? data?.user?.image : userIcon.src}
                      style={{
                        aspectRatio: "32/32",
                        objectFit: "cover",
                      }}
                      width="32"
                    />
                    <span className="sr-only">Toggle user menu</span>
                  </Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent align="end">
                  <DropdownMenuLabel>{data?.user?.name}</DropdownMenuLabel>
                  <DropdownMenuSeparator />
                  <DropdownMenuItem>Settings</DropdownMenuItem>
                  <DropdownMenuItem>Support</DropdownMenuItem>
                  <DropdownMenuSeparator />
                  <DropdownMenuItem onClick={handleSignOut}>Logout</DropdownMenuItem>
                </DropdownMenuContent>
              </DropdownMenu>
            ) : (
              <>
                <Link href="/signup">
                  <Button size="sm">Sign up</Button>
                </Link>
                <Link href="/login">
                  <Button size="sm" variant="outline">
                    Log in
                  </Button>
                </Link>
              </>
            )}
          </div>
        </div>
      </div>
    </nav>
  )
}


